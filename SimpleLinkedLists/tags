!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Node	SimpleLinkedList.h	/^struct Node {$/;"	s
SIMPLE_LINKED_LIST__	SimpleLinkedList.h	/^#define SIMPLE_LINKED_LIST__$/;"	d
_data	SimpleLinkedList.h	/^    T _data;$/;"	m	struct:Node
_next	SimpleLinkedList.h	/^    Node<T> *_next;$/;"	m	struct:Node
add	SimpleLinkedList.cpp	/^void add (const T data, Node<T>* &list) {$/;"	f
add_last	SimpleLinkedList.cpp	/^void add_last (const T data, Node<T>* &list) {$/;"	f
deleteL	SimpleLinkedList.cpp	/^void deleteL (const T data, Node<T>* &list) {$/;"	f
empty	SimpleLinkedList.cpp	/^int empty (Node<T>* &list) {$/;"	f
insert	SimpleLinkedList.cpp	/^void insert (const T data, int pos, Node<T>* &list) {$/;"	f
main	Main.cpp	/^int main() {$/;"	f
pop	SimpleLinkedList.cpp	/^T pop (Node<T>* &list) {$/;"	f
pop_last	SimpleLinkedList.cpp	/^T pop_last (Node<T>* &list) {$/;"	f
print	SimpleLinkedList.cpp	/^void print (Node<T>* list) {$/;"	f
size	SimpleLinkedList.cpp	/^int size (Node<T>* list) {$/;"	f
